08.07.2023

*önce çalışacağım sınıfları oluşturuyorum
ilk olarak modelsde modellerimi oluşturuyorum


*models içinde product oluşturdum

1-n ilişkide çok olan tarafta tek olan tarafın tek olanın id sini barındırırsın
bir kategoride çok ürün yer alır product tarafında kategorinin id sinin barındır
id sini oluşturduktan sonra nesnesinide eklemeliyim ki veri çekebileyim

product clasımda category ve supplier için id ve nesnesinide oluşturdum

*Category.cs
kategori sınıfımı oluşturdum. bir kategorinin çokça ürünü olur. çokluk yapısını koleksiyon yapısında tutarım

*Supplier.cs
bir tedarikçininde çokça ürünü vardır



burada maplameye girmeyeceğim configurasyonlara girmeyeceğim onu ilerde yapacağım. verileri şimdilik db tarafında gireceğim.

bu aşamada context folderımı oluşturup sınıfımı oluşturacağım bu beni db'ye bağlayacak
bu sunıf db context sınıfından kalıtım aldığından anlıyor.

*nugetleradan ef core sql server, ef core tools, unity indirdim

*context sınıfında en teml olarak 3 şey söylüyoruz
kendi bağlantı cümlemiz
tablolarımız,db setleri
ilişkiler, kurallar varsa bunları söylüyoruz

bunları app settig.jsona yazacağım

appsettingde bağlantı cümlemi yazacağım
sonra startupda configıreservicesde bağlantı cümlem appde bilmek isteyen context sınıfında startupda ikisini konuşturuyorum
AddDbContext db context sınıfını ekle


***appstingde connectionstringim var.ismi Default olan cümleciğim var. 
"ConnectionStrings": { "default": "Server=GNRM-LAB05-PC15;Database=IOC;UId=sa;Password=123;" }

bu db contexti ekle. dbcontexten kalıtım alan bir sınıfını ekle. ProjectContext db context sınıfıdır.
ProjectContext sınıfıma diyorumki options öyleki bu sql server metodunu kullan UseSqlServer. buda bağlantı cümleciği bekliyor. oda appsettingdeki default adındaki bağlantı cümleciğim. onu getir diyorum GetConnectionString. böylece ProjectContext sınıfına bağlıyorum. eskiden içinde yazıyorumdum şimdi startupda kod sabitlerimi yazıyorum.

*şimdi göç başlatacağım.
add-migration one
sonra
update-database

--repo yazacağım. ioc yi burada kullanacağım
kendi metod kütüphanemi yazacağım

yeni klasör oluşturacağım Infrastructure bize hizmet eden klasör
irepository
productcontext

Concrete/CategoryRepository
Concrete/SupplierRepository

repolarımı yazdım artık controllerımla ihtiyaçları karşılayabilirim

productcontreller oluşturdum

product nesnesi oluşturup göndermek amacım var

boş product nesnesi yollayacağım



09.07.2023

tüm kategorileri taşısın
tüm satıcıları taşısın
bir tanede ürün göstersin

bunun için CreateProductVM oluşturduk

CategoryReponun,ProductRepo,SuplierRepo hepsinin kökeni IRepository

IOC=> ortak bir soyut katmandan gelirsen(IRepository) bana bu tipten birşey ver diyecem o bana alt tipten(CategoryRepoyu) verecek
IRepository<Category> istediğimde CategoryRepository tipinde ver diyeceğim. bunu startupda yazacağım startupda yenii bir metod yazacağım ConfigureContainer diye


